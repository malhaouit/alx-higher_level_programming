The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

Import the class BaseGeometry for testing cases:
	>>> BaseGeometry =  __import__('7-base_geometry').BaseGeometry

==> Tests:
- Call area() method:
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

- Give an argument to erea():
	>>> bg = BaseGeometry()
	>>> bg.area(1)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given

- Test integer_validator function:
	>>> bg.integer_validator("my_int", 25)
	>>>

- Second Test of integer_validator function:
	>>> bg.integer_validator("name", "Abdelmounaim")
	Traceback (most recent call last): 
	...
	TypeError: name must be an integer

- Thired Test of integer_validator function:
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

- Fourth Test of integer_validator function:
	>>> bg.integer_validator("height", -5.7)
	Traceback (most recent call last):
        ...
        TypeError: height must be an integer

- Fifth Test of integer_validator function:
	>>> bg.integer_validator("type", (1, 2))
	Traceback (most recent call last):
        ...
        TypeError: type must be an integer

- Sixth Test of integer_validator function:
	>>> bg.integer_validator("type", )
	Traceback (most recent call last):
        ...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

- Sevent Test of integer_validator function:
	 >>> bg.integer_validator()
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

- Checking for too many arguments:
	 >>> bg.integer_validator("integer", 32, 101)
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() takes 3 positional arguments but 4 were given

- Test number 9 of integer_validator function:
	>>> bg.integer_validator("type", [1, 2, 3])
	Traceback (most recent call last):
	...
    	TypeError: type must be an integer

- Test number 10 of integer_validator function:
	>>> bg.integer_validator("type", 2.5)
	Traceback (most recent call last):
        ...
        TypeError: type must be an integer

- Test number 11 of integer_validator function:
	>>> bg.integer_validator("type", False)
        Traceback (most recent call last):
        ...
        TypeError: type must be an integer

- Test number 12 of integer_validator function:
        >>> bg.integer_validator("type", {1, 2, 3})
        Traceback (most recent call last):
        ...
        TypeError: type must be an integer

- Test number 13 of integer_validator function:
        >>> bg.integer_validator("type", b"bytes")
        Traceback (most recent call last):
        ...
        TypeError: type must be an integer
